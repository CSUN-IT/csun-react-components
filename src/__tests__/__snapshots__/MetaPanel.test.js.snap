// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MetaPanel Renders component correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MetaPanel
    className=""
    panelContent={
      Object {
        "text": "This is a panel w/ a header",
      }
    }
    panelFooter={null}
    panelHeader={
      Object {
        "text": "Panel",
      }
    }
    panelImage={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="panel__header"
        >
          <strong>
            Panel
          </strong>
        </div>,
        null,
        <div
          className="panel__content"
        >
          This is a panel w/ a header
        </div>,
        null,
      ],
      "className": " panel",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <strong>
            Panel
          </strong>,
          "className": "panel__header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Panel",
          },
          "ref": null,
          "rendered": "Panel",
          "type": "strong",
        },
        "type": "div",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is a panel w/ a header",
          "className": "panel__content",
        },
        "ref": null,
        "rendered": "This is a panel w/ a header",
        "type": "div",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="panel__header"
          >
            <strong>
              Panel
            </strong>
          </div>,
          null,
          <div
            className="panel__content"
          >
            This is a panel w/ a header
          </div>,
          null,
        ],
        "className": " panel",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              Panel
            </strong>,
            "className": "panel__header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Panel",
            },
            "ref": null,
            "rendered": "Panel",
            "type": "strong",
          },
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is a panel w/ a header",
            "className": "panel__content",
          },
          "ref": null,
          "rendered": "This is a panel w/ a header",
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
